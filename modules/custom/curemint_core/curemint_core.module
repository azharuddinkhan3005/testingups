<?php

/**
 * @file
 * Defines Curemint core module.
 */

use \Drupal\Core\Entity\EntityInterface;
use \Drupal\node\Entity\Node;
use \Drupal\Core\Messenger\MessengerInterface;
use \Drupal\views\ViewExecutable;
use \Drupal\taxonomy\Entity\Term;
use \Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_ENTITY_TYPE_update().
 */
function curemint_core_node_update(EntityInterface $entity) {
  curemint_core_unpublish_banner_nodes($entity);
}

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function curemint_core_node_insert(EntityInterface $entity) {
  curemint_core_unpublish_banner_nodes($entity);
}

/**
 * Internal function to help unpublish other banner nodes.
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 *   The node object being saved.
 */
function curemint_core_unpublish_banner_nodes($entity) {
  // Only process if the current node is set to be published.
  if ($entity->status->value == Node::PUBLISHED) {
    $nids = \Drupal::entityQuery('node')->condition('type', 'banner')->execute();
    $current_nid = $entity->id();
    foreach ($nids as $nid) {
      if ($nid == $current_nid) {
        continue;
      }

      $node = Node::load($nid);
      if ($node->status->value == Node::PUBLISHED) {
        $node->setPublished(Node::NOT_PUBLISHED);
        $node->save();
      }
    }
    $messenger = \Drupal::messenger();
    $messenger->addMessage('All other banners are unpublished.', MessengerInterface::TYPE_WARNING);
  }
}

/**
 * Implements hook_views_pre_render().
 */
function curemint_core_views_pre_render(ViewExecutable $view) {
  if ($view->id() == 'supplies'
    && $view->current_display == 'page_2'
  && !empty($view->result[0]->_entity)) {
    // Change the URL of the "more link" rendered via Views pager.
    $storage = \Drupal::service('entity_type.manager')
      ->getStorage('taxonomy_term');
    $parents = $storage->loadParents($view->result[0]->_entity->id());
    $view->display_handler->setOption('link_display', 'custom_url');
    $view->display_handler->setOption('link_url', 'supplies/' . current($parents)->id());
  }
  elseif ($view->id() == 'cm_product_search') {
    // Update the page title as per applied filters.
    $params = \Drupal::request()->query->all();
    $title = '';
    if (array_key_exists('distributor', $params)) {
      $title = Node::load($params['distributor'])->getTitle();
    }
    elseif (array_key_exists('category', $params)) {
      $title = Term::load($params['category'])->getName();
    }
    if (!empty($title)) {
      $view->setTitle($title);
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function curemint_core_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == 'views_exposed_form' && $form['#id'] == 'views-exposed-form-cm-product-search-page-1') {
    $params = \Drupal::request()->query->all();
    if (!array_key_exists('keyword', $params)) {
      $form['keyword']['#access'] = FALSE;
    }
    if (!array_key_exists('distributor', $params)) {
      $form['distributor']['#access'] = FALSE;
    }
    if (!array_key_exists('category', $params)) {
      $form['category']['#access'] = FALSE;
    }
  }
}